version: '3'
services:

  # PHP Runtime Service
  tests_php_runtime:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    image: php:7.4.6-fpm-alpine3.11
    container_name: tests_php_runtime
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: tests_php_runtime
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./docker/php/conf.d/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - tests-network

  # Nginx Service
  tests_nginx_webserver:
    image: nginx:alpine
    container_name: tests_nginx_webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8085:80"
      - "4435:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - tests-network

  tests_rabbitmq:
    image: 'rabbitmq:3.6-management-alpine'
    container_name: tests_rabbitmq
    restart: unless-stopped
    tty: true
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      # The standard AMQP protocol port
      - "5675:5672"
      # HTTP management UI
      - "15675:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/mnesia
      - rabbitmq_log:/var/log/rabbitmq
    networks:
      - tests-network

  tests_postgres_app_db:
    image: postgres:11-alpine
    container_name: tests_postgres_app_db
    restart: unless-stopped
    tty: true
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: default
    ports:
      - "5435:5432"
    volumes:
      - postgres-app-data:/var/lib/postgresql/data
    networks:
      - tests-network

# Docker Networks
networks:
  tests-network:
    driver: bridge

# Volumes
volumes:
  rabbitmq_data:
#    driver: local
  rabbitmq_log:
#    driver: local
  postgres-app-data:
#    driver: local
